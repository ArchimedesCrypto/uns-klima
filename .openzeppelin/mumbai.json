{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5B3b5A2e0686518Dc92d93F1384966611C851957",
    "txHash": "0xb3c44983974d2edf99a98defddf10df18313c24038196453e5d6ef5189612cfb",
    "deployTransaction": {
      "hash": "0xb3c44983974d2edf99a98defddf10df18313c24038196453e5d6ef5189612cfb",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x87348226e747Df4CFF2b1B1e38A528df405cCD5C",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x06fc23ac00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 12,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x8a6b9faad0b0ed94579dd0d32ddb32adb238205eb5fd404c479b7015ee091e7d",
      "s": "0x0adff476c68feb41582f53726d545c99d3a2b40b6624e433010d35875b808373",
      "v": 160037,
      "creates": "0x5B3b5A2e0686518Dc92d93F1384966611C851957",
      "chainId": 80001
    }
  },
  "proxies": [
    {
      "address": "0x2E266E3366ECdC9499bDc974B7330Cd054a8d563",
      "txHash": "0x09f5373283e1bb7c6e8e082c3836c68a36ff01f378e880953df2bc5cb8a35662",
      "kind": "transparent"
    },
    {
      "address": "0x2f64e7c554C95541F13bBe9AA7fd4cb4cfe6CC13",
      "txHash": "0x1e8b68e8a87883a8cd9760939123fb42e052dd0be3187fae8ffd9af87664bcb3",
      "kind": "transparent"
    },
    {
      "address": "0x01aBE86aB44dAf5eaeb82271FE1a0B8875ae7282",
      "txHash": "0x90281842a7b726c3269c11217bd607c1387716bfa0fdefb631cee13f96be4a87",
      "kind": "transparent"
    },
    {
      "address": "0xce6D453Efd7ff9Aa3CC788e19Bc0dd2B17307664",
      "txHash": "0x16b89d84b38581ef623d0aac5a500bf643e361be3d9cce1d551c7ff7e858489e",
      "kind": "transparent"
    },
    {
      "address": "0xdbFe55001aC81b69E03dC927aB06661E7ea70Fa1",
      "txHash": "0xdfa155bd142e307282109240bfc38c1162b61c2cfdfdaf9313edce6aaa1a13e2",
      "kind": "transparent"
    },
    {
      "address": "0x3569E6D9C2b85f6C9a07341C9d4C9d3db3ba947a",
      "txHash": "0x7cea789aca18877e144e80ca461f1abb937931f808d4d5bc7f6fe8e8b6e11d95",
      "kind": "transparent"
    },
    {
      "address": "0x154321507Fd9203188B56Be5f5D3f6c1136CBdcF",
      "txHash": "0x642a96927545bc6b6bce638e902f9f9fc508b6e8f8b56650d22ce5ac020e531c",
      "kind": "transparent"
    },
    {
      "address": "0x6471164c87Da7Ad97A5B019abc4E428dcDa8E05d",
      "txHash": "0x684d8bf408b924c0e5fe9a68e5f9ccc64db120376869ba5d216a1a2ee9584305",
      "kind": "transparent"
    },
    {
      "address": "0xecb7AaC995C284970A347342F5d04dB81fdB436F",
      "txHash": "0x04c541fac8c6cdbcb0a52da1c80bbc592c818c7c3a48232a2d7977926e3cb9f1",
      "kind": "transparent"
    },
    {
      "address": "0xf3c590e61755CDAb602F66B7ffC50925a9dD84CB",
      "txHash": "0x3242cf7bb403036ce3a424240e2535219edb4a64570c5dd312762087e7c3985c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "60b83e7402fede088caa47746f5d89c32f0c6f549ea4d5d4b779a23db0826b3b": {
      "address": "0x256A4BB939b4C583797F8cee20a0F30E864EDe08",
      "txHash": "0xbcf1e74fad76e0af2fb833f2b5bf1a474244017fbf6979defada60793b861dbf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "ERC2771RegistryContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "contract": "KeyStorage",
            "label": "_keys",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "contract": "RecordStorage",
            "label": "_records",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "contract": "RecordStorage",
            "label": "_tokenPresets",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:114"
          },
          {
            "contract": "RegistryForwarder",
            "label": "_nonces",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/metatx/RegistryForwarder.sol:29"
          },
          {
            "contract": "RegistryForwarder",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/RegistryForwarder.sol:209"
          },
          {
            "contract": "UNSRegistry",
            "label": "_prefix",
            "type": "t_string_storage",
            "src": "contracts/UNSRegistry.sol:45"
          },
          {
            "contract": "UNSRegistry",
            "label": "_mintingManager",
            "type": "t_address",
            "src": "contracts/UNSRegistry.sol:47"
          },
          {
            "contract": "UNSRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UNSRegistry.sol:329"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "165b694fbc9bb002e21771d1e563e8b9f02af840954d5ea70c07475912eabe62": {
      "address": "0xf6dA3c88932673F9E4E2913Cb1fC50f09Ce4f0C6",
      "txHash": "0xd2ad423453e3b233ede255b53e772ad4d9093840473bfaa9371bdebc12662bcc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)176_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "MintingManager",
            "label": "unsRegistry",
            "type": "t_contract(IUNSRegistry)4066",
            "src": "contracts/MintingManager.sol:27"
          },
          {
            "contract": "MintingManager",
            "label": "cnsMintingController",
            "type": "t_contract(IMintingController)7711",
            "src": "contracts/MintingManager.sol:28"
          },
          {
            "contract": "MintingManager",
            "label": "cnsURIPrefixController",
            "type": "t_contract(IURIPrefixController)7787",
            "src": "contracts/MintingManager.sol:29"
          },
          {
            "contract": "MintingManager",
            "label": "cnsResolver",
            "type": "t_contract(IResolver)7779",
            "src": "contracts/MintingManager.sol:30"
          },
          {
            "contract": "MintingManager",
            "label": "_tlds",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/MintingManager.sol:37"
          },
          {
            "contract": "MintingManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MintingManager.sol:285"
          }
        ],
        "types": {
          "t_contract(IUNSRegistry)4066": {
            "label": "contract IUNSRegistry"
          },
          "t_contract(IMintingController)7711": {
            "label": "contract IMintingController"
          },
          "t_contract(IURIPrefixController)7787": {
            "label": "contract IURIPrefixController"
          },
          "t_contract(IResolver)7779": {
            "label": "contract IResolver"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)176_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)176_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29af52e2d956c012710d8a51532a176e3e6c8f72a7092440e61862e54bca0529": {
      "address": "0xa57032AF151f4FD9AF7564DC4CC6E6793e0D822b",
      "txHash": "0xcacff9484311f13872db8e75f199fe985cbae1ba6e8fa2e3a62b22b96161ead7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "ERC2771RegistryContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "contract": "KeyStorage",
            "label": "_keys",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "contract": "RecordStorage",
            "label": "_records",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "contract": "RecordStorage",
            "label": "_tokenPresets",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:114"
          },
          {
            "contract": "RegistryForwarderV0",
            "label": "_nonces",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/metatx/RegistryForwarderV0.sol:29"
          },
          {
            "contract": "RegistryForwarderV0",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/RegistryForwarderV0.sol:209"
          },
          {
            "contract": "UNSRegistryV01",
            "label": "_prefix",
            "type": "t_string_storage",
            "src": "contracts/UNSRegistryV01.sol:42"
          },
          {
            "contract": "UNSRegistryV01",
            "label": "_mintingManager",
            "type": "t_address",
            "src": "contracts/UNSRegistryV01.sol:44"
          },
          {
            "contract": "UNSRegistryV01",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UNSRegistryV01.sol:326"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "8a556d8f3db16aea353f1effdddfa2435d6b0a4fa8943ae6fc0bfa4fa5939dfd": {
      "address": "0x5577b1b7E9cA93480035C02051F664a04AC34aa4",
      "txHash": "0xbbd5cdc4ceac8dea47d1b54995622e75b300f63c7223c36b3970dd595d4edb9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)176_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "MintingManager",
            "label": "unsRegistry",
            "type": "t_contract(IUNSRegistry)4066",
            "src": "contracts/MintingManager.sol:27"
          },
          {
            "contract": "MintingManager",
            "label": "cnsMintingController",
            "type": "t_contract(IMintingController)7655",
            "src": "contracts/MintingManager.sol:28"
          },
          {
            "contract": "MintingManager",
            "label": "cnsURIPrefixController",
            "type": "t_contract(IURIPrefixController)7731",
            "src": "contracts/MintingManager.sol:29"
          },
          {
            "contract": "MintingManager",
            "label": "cnsResolver",
            "type": "t_contract(IResolver)7723",
            "src": "contracts/MintingManager.sol:30"
          },
          {
            "contract": "MintingManager",
            "label": "_tlds",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/MintingManager.sol:37"
          },
          {
            "contract": "MintingManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MintingManager.sol:285"
          }
        ],
        "types": {
          "t_contract(IUNSRegistry)4066": {
            "label": "contract IUNSRegistry"
          },
          "t_contract(IMintingController)7655": {
            "label": "contract IMintingController"
          },
          "t_contract(IURIPrefixController)7731": {
            "label": "contract IURIPrefixController"
          },
          "t_contract(IResolver)7723": {
            "label": "contract IResolver"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)176_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)176_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "a77493ab84226407ffd2839c4789922d5814ebe6bc54d8a2ce3d23f1076360d0": {
      "address": "0xA6eaeD1A9f275fcA8c68ACC292629674C5Dee6bd",
      "txHash": "0xc5a93a7db783ab49ca26348bcdcfdaee150aba95c031454659ba7678f78c975c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "ERC2771RegistryContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "contract": "KeyStorage",
            "label": "_keys",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "contract": "RecordStorage",
            "label": "_records",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "contract": "RecordStorage",
            "label": "_tokenPresets",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:114"
          },
          {
            "contract": "RegistryForwarderV0",
            "label": "_nonces",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/metatx/RegistryForwarderV0.sol:29"
          },
          {
            "contract": "RegistryForwarderV0",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/RegistryForwarderV0.sol:209"
          },
          {
            "contract": "UNSRegistryV01",
            "label": "_prefix",
            "type": "t_string_storage",
            "src": "contracts/UNSRegistryV01.sol:42"
          },
          {
            "contract": "UNSRegistryV01",
            "label": "_mintingManager",
            "type": "t_address",
            "src": "contracts/UNSRegistryV01.sol:44"
          },
          {
            "contract": "UNSRegistryV01",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UNSRegistryV01.sol:326"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
