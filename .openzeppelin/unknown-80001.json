{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x460d63117c7Ab1624b7474C45BF46eC6702f57ce",
    "txHash": "0xf2c6d4abfe7632d9fbc99c1f3d6a83a2c59333a9b6f82e36a84283359abc6197"
  },
  "proxies": [
    {
      "address": "0x2a93C52E7B6E7054870758e15A1446E769EdfB93",
      "txHash": "0x2468dc5dedd1cac47693a908f747df6fccbcf0207e887575c0ec3cbf7b1e05fc",
      "kind": "transparent"
    },
    {
      "address": "0x428189346bb3CC52f031A1092fd47C919AC30A9f",
      "txHash": "0x9546b75b81976c0a2670d713b939b0a3f941cfe7c85e019078844a4eca6851eb",
      "kind": "transparent"
    }
  ],
  "impls": {
    "32ed65c5c3286d395b709e0f399024ea8fbe36f5535bf659f6a781ee144874a5": {
      "address": "0x6EBa8D5fD76a7C2A760BE0fB993F18FB54920010",
      "txHash": "0x79bcdce91ee18034cb35f679c300e9d1f13836a081ab9027d7345db937b05d2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "ERC2771RegistryContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "contract": "KeyStorage",
            "label": "_keys",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "contract": "RecordStorage",
            "label": "_records",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "contract": "RecordStorage",
            "label": "_tokenPresets",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "contract": "EIP712UpgradeableGap",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:12"
          },
          {
            "contract": "EIP712UpgradeableGap",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:13"
          },
          {
            "contract": "EIP712UpgradeableGap",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:14"
          },
          {
            "contract": "UNSRegistryForwarder",
            "label": "_nonces",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:24"
          },
          {
            "contract": "UNSRegistryForwarder",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:157"
          },
          {
            "contract": "UNSRegistry",
            "label": "_prefix",
            "type": "t_string_storage",
            "src": "contracts/UNSRegistry.sol:32"
          },
          {
            "contract": "UNSRegistry",
            "label": "_mintingManager",
            "type": "t_address",
            "src": "contracts/UNSRegistry.sol:34"
          },
          {
            "contract": "UNSRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/UNSRegistry.sol:317"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "3f4b5be6a24b1aaae969931e147bcaa48740a308afa92d0704fc080fd6022494": {
      "address": "0x4f4c3a4B75346A546d309934726e7FfbdA13262D",
      "txHash": "0xfb250aca328435fc175d1fb4f89cc2ed4c527340b6468c9b72c5ec8a66812ff4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)176_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "MintingManager",
            "label": "unsRegistry",
            "type": "t_contract(IUNSRegistry)4551",
            "src": "contracts/MintingManager.sol:25"
          },
          {
            "contract": "MintingManager",
            "label": "cnsMintingController",
            "type": "t_contract(IMintingController)8771",
            "src": "contracts/MintingManager.sol:26"
          },
          {
            "contract": "MintingManager",
            "label": "cnsURIPrefixController",
            "type": "t_contract(IURIPrefixController)8847",
            "src": "contracts/MintingManager.sol:27"
          },
          {
            "contract": "MintingManager",
            "label": "cnsResolver",
            "type": "t_contract(IResolver)8839",
            "src": "contracts/MintingManager.sol:28"
          },
          {
            "contract": "MintingManager",
            "label": "_tlds",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/MintingManager.sol:35"
          },
          {
            "contract": "MintingManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MintingManager.sol:365"
          }
        ],
        "types": {
          "t_contract(IUNSRegistry)4551": {
            "label": "contract IUNSRegistry"
          },
          "t_contract(IMintingController)8771": {
            "label": "contract IMintingController"
          },
          "t_contract(IURIPrefixController)8847": {
            "label": "contract IURIPrefixController"
          },
          "t_contract(IResolver)8839": {
            "label": "contract IResolver"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)176_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)176_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ce7eac6a0e354ab2e212be3583b147a2d98eba2fb21682ecd19d4768cb957e3b": {
      "address": "0x920C8C343b7aade800cA70316C18eF90e96A31A4",
      "txHash": "0xca7e7425856f1a0882d53594a395e551c15bc1f3292efb040003bc7b1353a92f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771RegistryContext",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "label": "_keys",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "KeyStorage",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "label": "_records",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "RecordStorage",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "label": "_tokenPresets",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RecordStorage",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:12"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:14"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "UNSRegistryForwarder",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UNSRegistryForwarder",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:52"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "UNSRegistryV03",
            "src": "contracts/history/UNSRegistryV03.sol:34"
          },
          {
            "label": "_mintingManager",
            "offset": 0,
            "slot": "308",
            "type": "t_address",
            "contract": "UNSRegistryV03",
            "src": "contracts/history/UNSRegistryV03.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UNSRegistryV03",
            "src": "contracts/history/UNSRegistryV03.sol:393"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1c16cd56ddaec06d42d3d7c97de8457c0c8d631d84a870d7e795da81b4725a87": {
      "address": "0xCC17E698bA21bae4277579F22cA51135AaF00777",
      "txHash": "0xe7a570293f4bb0883ebeab40022f7ba788661d5c56ec2ade3171617b275564f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)176_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "MintingManager",
            "label": "unsRegistry",
            "type": "t_contract(IUNSRegistry)4274",
            "src": "contracts/MintingManager.sol:27"
          },
          {
            "contract": "MintingManager",
            "label": "cnsMintingController",
            "type": "t_contract(IMintingController)8541",
            "src": "contracts/MintingManager.sol:28"
          },
          {
            "contract": "MintingManager",
            "label": "cnsURIPrefixController",
            "type": "t_contract(IURIPrefixController)8617",
            "src": "contracts/MintingManager.sol:29"
          },
          {
            "contract": "MintingManager",
            "label": "cnsResolver",
            "type": "t_contract(IResolver)8609",
            "src": "contracts/MintingManager.sol:30"
          },
          {
            "contract": "MintingManager",
            "label": "_tlds",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/MintingManager.sol:37"
          },
          {
            "contract": "MintingManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/MintingManager.sol:332"
          }
        ],
        "types": {
          "t_contract(IUNSRegistry)4274": {
            "label": "contract IUNSRegistry"
          },
          "t_contract(IMintingController)8541": {
            "label": "contract IMintingController"
          },
          "t_contract(IURIPrefixController)8617": {
            "label": "contract IURIPrefixController"
          },
          "t_contract(IResolver)8609": {
            "label": "contract IResolver"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)176_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)176_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "4f9f1542f21d4c91b2eb762256718092b04aa74797dc4b75e9ddae653f0fe526": {
      "address": "0xAc1a1F2136BfDe3a353a95C0676Cd0d55f311ee3",
      "txHash": "0xf8cae680fa8a81e16fee7ccac3e1c773a90f8a2f61652b84b9716f0175c050ae",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771RegistryContext",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "label": "_keys",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "KeyStorage",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "label": "_records",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "RecordStorage",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "label": "_tokenPresets",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RecordStorage",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:12"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:14"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "UNSRegistryForwarder",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UNSRegistryForwarder",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:52"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:34"
          },
          {
            "label": "_mintingManager",
            "offset": 0,
            "slot": "308",
            "type": "t_address",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:36"
          },
          {
            "label": "_reverses",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:438"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "637109b605f20757315b832eb355afe0823714d2caa1b0cbd05c37774d774d33": {
      "address": "0x267f251B85B2003B98645195D085021C5B6e928c",
      "txHash": "0xb36108cfcc8fdcb4108e8b80780c972eec5778100090794616c418254cd08690",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771RegistryContext",
            "src": "contracts/metatx/ERC2771RegistryContext.sol:81"
          },
          {
            "label": "_keys",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "KeyStorage",
            "src": "contracts/KeyStorage.sol:7"
          },
          {
            "label": "_records",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "contract": "RecordStorage",
            "src": "contracts/RecordStorage.sol:11"
          },
          {
            "label": "_tokenPresets",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RecordStorage",
            "src": "contracts/RecordStorage.sol:14"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:12"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712UpgradeableGap",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:14"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "UNSRegistryForwarder",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UNSRegistryForwarder",
            "src": "contracts/metatx/UNSRegistryForwarder.sol:52"
          },
          {
            "label": "_prefix",
            "offset": 0,
            "slot": "307",
            "type": "t_string_storage",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:34"
          },
          {
            "label": "_mintingManager",
            "offset": 0,
            "slot": "308",
            "type": "t_address",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:36"
          },
          {
            "label": "_reverses",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "UNSRegistry",
            "src": "contracts/UNSRegistry.sol:451"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
