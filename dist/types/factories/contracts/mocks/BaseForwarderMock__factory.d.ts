import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BaseForwarderMock, BaseForwarderMockInterface } from "../../../contracts/mocks/BaseForwarderMock";
declare type BaseForwarderMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BaseForwarderMock__factory extends ContractFactory {
    constructor(...args: BaseForwarderMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<BaseForwarderMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): BaseForwarderMock;
    connect(signer: Signer): BaseForwarderMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610c24806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ccbae5f1161005b5780636ccbae5f146100bd578063716ac80f146100eb578063a4247400146100f3578063a567fb471461011657600080fd5b80631bf7e13e146100825780634167168d146100ab5780635b2dd100146100b5575b600080fd5b6100956100903660046108d2565b610142565b6040516100a29190610a22565b60405180910390f35b6100b3600080fd5b005b6100b361024e565b6100dd6100cb36600461096a565b60009081526020819052604090205490565b6040519081526020016100a2565b6100b361027f565b6101066101013660046108d2565b6102b6565b60405190151581526020016100a2565b6101066101243660046108a0565b6001600160a01b031660009081526001602052604090205460ff1690565b606060005a90506101548585856102b6565b6101b15760405162461bcd60e51b8152602060048201526024808201527f42617365466f727761726465724d6f636b3a205349474e41545552455f494e566044820152631053125160e21b60648201526084015b60405180910390fd5b6102436101c160208701876108a0565b306040880135846101d560608b018b610a35565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525061030992505050565b9150505b9392505050565b60405162461bcd60e51b815260206004820152600660248201526541414141414160d01b60448201526064016101a8565b600180600061028c6103f8565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055565b60006103016102c485610b18565b3085858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041492505050565b949350505050565b60606103148561056c565b600080876001600160a01b03168661032e8b8a8989610598565b60405161033b91906109ae565b60006040518083038160008787f1925050503d8060008114610379576040519150601f19603f3d011682016040523d82523d6000602084013e61037e565b606091505b50909250905061038f603f87610af8565b5a116103ab57634e487b7160e01b600052600160045260246000fd5b6103eb82826040518060400160405280601a81526020017f42617365466f727761726465723a2043414c4c5f4641494c45440000000000008152506105c8565b9998505050505050505050565b60003330141561040f575060331936013560601c90565b503390565b6040838101519051636ccbae5f60e01b8152600481019190915260009081903090636ccbae5f9060240160206040518083038186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e91906108ba565b9050600061053c8660600151805190602001208688602001516040516020016104dc9392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b905081866020015114801561056257508551610562906001600160a01b03168286610601565b9695505050505050565b600081815260208190526040902054610586906001610ad4565b60009182526020829052604090912055565b60608285856040516020016105af939291906109ca565b6040516020818303038152906040529050949350505050565b606083156105d7575081610247565b8251156105e75782518084602001fd5b8160405162461bcd60e51b81526004016101a89190610a22565b60008060006106108585610751565b9092509050600081600481111561063757634e487b7160e01b600052602160045260246000fd5b1480156106555750856001600160a01b0316826001600160a01b0316145b1561066557600192505050610247565b600080876001600160a01b0316631626ba7e60e01b888860405160240161068d929190610a09565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516106cb91906109ae565b600060405180830381855afa9150503d8060008114610706576040519150601f19603f3d011682016040523d82523d6000602084013e61070b565b606091505b509150915081801561071e575080516020145b801561074557508051630b135d3f60e11b9061074390830160209081019084016108ba565b145b98975050505050505050565b6000808251604114156107885760208301516040840151606085015160001a61077c87828585610797565b94509450505050610790565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107ce575060009050600361087b565b8460ff16601b141580156107e657508460ff16601c14155b156107f7575060009050600461087b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561084b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108745760006001925092505061087b565b9150600090505b94509492505050565b80356001600160a01b038116811461089b57600080fd5b919050565b6000602082840312156108b1578081fd5b61024782610884565b6000602082840312156108cb578081fd5b5051919050565b6000806000604084860312156108e6578182fd5b833567ffffffffffffffff808211156108fd578384fd5b9085019060808288031215610910578384fd5b90935060208501359080821115610925578384fd5b818601915086601f830112610938578384fd5b813581811115610946578485fd5b876020828501011115610957578485fd5b6020830194508093505050509250925092565b60006020828403121561097b578081fd5b5035919050565b6000815180845261099a816020860160208601610bd1565b601f01601f19169290920160200192915050565b600082516109c0818460208701610bd1565b9190910192915050565b600084516109dc818460208901610bd1565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b8281526040602082015260006103016040830184610982565b6020815260006102476020830184610982565b6000808335601e19843603018112610a4b578283fd5b83018035915067ffffffffffffffff821115610a65578283fd5b60200191503681900382131561079057600080fd5b6040516080810167ffffffffffffffff81118282101715610a9d57610a9d610c01565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610acc57610acc610c01565b604052919050565b60008219821115610af357634e487b7160e01b81526011600452602481fd5b500190565b600082610b1357634e487b7160e01b81526012600452602481fd5b500490565b600060808236031215610b29578081fd5b610b31610a7a565b610b3a83610884565b81526020808401358183015260408401356040830152606084013567ffffffffffffffff80821115610b6a578485fd5b9085019036601f830112610b7c578485fd5b813581811115610b8e57610b8e610c01565b610ba0601f8201601f19168501610aa3565b91508082523684828501011115610bb5578586fd5b8084840185840137810190920193909352606082015292915050565b60005b83811015610bec578181015183820152602001610bd4565b83811115610bfb576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";
    static readonly abi: {
        inputs: ({
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        } | {
            internalType: string;
            name: string;
            type: string;
            components?: undefined;
        })[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): BaseForwarderMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BaseForwarderMock;
}
export {};
//# sourceMappingURL=BaseForwarderMock__factory.d.ts.map